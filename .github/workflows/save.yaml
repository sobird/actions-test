name: Actions Workflow Test
run-name: ${{ github.actor }} is testing out Actions
'on':
  pull_request: null
  push:
    branches:
      - main
  release:
    types:
      - published
  label:
    types:
      - created
  schedule:
    - cron: 30 5 * * 1,3
    - cron: 30 5 * * 2,4
permissions:
  contents: read
jobs:
  Explore-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: >-
          echo "The job was automatically triggered by a ${{ github.event_name
          }} event."
      - run: >-
          echo "This job is now running on a ${{ runner.os }} server hosted by
          !"
      - run: >-
          echo "The name of your branch is ${{ github.ref }} and your repository
          is ${{ github.repository }}."
      - uses: actions/checkout@v3
      - run: >-
          echo "The ${{ github.repository }} repository has been cloned to the
          runner."
      - run: echo "The workflow is now ready to test your code on the runner."
      - run: |
          ls ${{ github.workspace }}
      - run: echo "This job's status is ${{ job.status }}."
    strategy: {}
    container:
      env: {}
  Test-Docker:
    runs-on: ubuntu-latest
    steps:
      - run: docker version
    strategy: {}
    container:
      env: {}
  Test-Node:
    runs-on: ubuntu-latest
    steps:
      - uses: octo-org/action-name@main
      - if: ${{ failure() }}
        uses: actions/heroku@1.0.0
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/
      - run: |
          node -v
      - id: yarn-cache
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: |
          npm i
    strategy: {}
    container:
      env: {}
